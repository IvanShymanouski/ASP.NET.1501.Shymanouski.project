<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ActionMailerNext</name>
    </assembly>
    <members>
        <member name="T:ActionMailerNext.AttachmentCollection">
            <summary>
            A collection of attachments.  This is basically a glorified Dictionary.
            </summary>
        </member>
        <member name="M:ActionMailerNext.AttachmentCollection.#ctor">
            <summary>
            Constructs an empty AttachmentCollection object.
            </summary>
        </member>
        <member name="P:ActionMailerNext.AttachmentCollection.Inline">
            <summary>
            Any attachments added to this collection will be treated
            as inline attachments within the mail message.
            </summary>
        </member>
        <member name="T:ActionMailerNext.DeliveryHelper">
            <summary>
            Some helpers used to dilver mail.  Reduces the need to repeat code.
            </summary>
        </member>
        <member name="M:ActionMailerNext.DeliveryHelper.#ctor(ActionMailerNext.IMailSender,ActionMailerNext.IMailInterceptor)">
            <summary>
            Creates a new dilvery helper to be used for sending messages.
            </summary>
            <param name="sender">The sender to use when delivering mail.</param>
            <param name="interceptor">The interceptor to report with while delivering mail.</param>
        </member>
        <member name="M:ActionMailerNext.DeliveryHelper.Deliver(System.Boolean,System.Net.Mail.MailMessage)">
            <summary>
            Sends the given email using the given
            </summary>
            <param name="async">Whether or not to use asynchronous delivery.</param>
            <param name="mail">The mail message to send.</param>
        </member>
        <member name="T:ActionMailerNext.IMailerBase">
            <summary>
            All mailers should implement this interface.
            </summary>
        </member>
        <member name="T:ActionMailerNext.IMailInterceptor">
            <summary>
            A simple interface that allows for reading or manipulating mail
            messages before and after transfer.
            </summary>
        </member>
        <member name="M:ActionMailerNext.IMailInterceptor.OnMailSending(ActionMailerNext.MailSendingContext)">
            <summary>
            This method is called before each mail is sent
            </summary>
            <param name="context">A simple context containing the mail
            and a boolean value that can be toggled to prevent this
            mail from being sent.</param>
        </member>
        <member name="M:ActionMailerNext.IMailInterceptor.OnMailSent(System.Net.Mail.MailMessage)">
            <summary>
            This method is called after each mail is sent.
            </summary>
            <param name="mail">The mail that was sent.</param>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.From">
            <summary>
            A string representation of who this mail should be from.  Could be
            your name and email address or just an email address by itself.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.Subject">
            <summary>
            The subject line of the email.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.To">
            <summary>
            A collection of addresses this email should be sent to.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.CC">
            <summary>
            A collection of addresses that should be CC'ed.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.BCC">
            <summary>
            A collection of addresses that should be BCC'ed.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.ReplyTo">
            <summary>
            A collection of addresses that should be listed in Reply-To header.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.Headers">
            <summary>
            Any custom headers (name and value) that should be placed on the message.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.MessageEncoding">
            <summary>
            Gets or sets the default message encoding when delivering mail.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.Attachments">
            <summary>
            Any attachments you wish to add.  The key of this collection is what
            the file should be named.  The value is should represent the binary bytes
            of the file.
            </summary>
            <example>
            Attachments["picture.jpg"] = File.ReadAllBytes(@"C:\picture.jpg");
            </example>
        </member>
        <member name="P:ActionMailerNext.IMailerBase.MailSender">
            <summary>
            The underlying IMailSender to use for outgoing messages.
            </summary>
        </member>
        <member name="T:ActionMailerNext.IEmailResult">
            <summary>
            Interface for email results. Allows to send the message synchonously or asynchonously
            </summary>
        </member>
        <member name="M:ActionMailerNext.IEmailResult.Deliver">
            <summary>
            Sends your message.  This call will block while the message is being sent. (not recommended)
            </summary>
        </member>
        <member name="M:ActionMailerNext.IEmailResult.DeliverAsync">
            <summary>
            Sends your message asynchronously.  This method does not block.  If you need to know
            when the message has been sent, then override the OnMailSent method in MailerBase which
            will not fire until the asyonchronous send operation is complete.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IEmailResult.Mail">
            <summary>
            The underlying MailMessage object that was passed to this object's constructor.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IEmailResult.MailSender">
            <summary>
            The IMailSender instance that is used to deliver mail.
            </summary>
        </member>
        <member name="P:ActionMailerNext.IEmailResult.MessageEncoding">
            <summary>
            The default encoding used to send a message.
            </summary>
        </member>
        <member name="T:ActionMailerNext.MailerBaseExtensions">
            <summary>
            Some simple extension methods for the IMailerBase interface so we can use
            them in all implementations.
            </summary>
        </member>
        <member name="M:ActionMailerNext.MailerBaseExtensions.GenerateMail(ActionMailerNext.IMailerBase)">
            <summary>
            Creates a MailMessage for the given IMailerBase instance.
            </summary>
            <param name="mailer">The IMailerBase to generate the message for</param>
        </member>
        <member name="T:ActionMailerNext.NoViewsFoundException">
            <summary>
            Thrown when ActionMailer cannot locate any views for a given EmailResult
            </summary>
        </member>
        <member name="M:ActionMailerNext.NoViewsFoundException.#ctor">
            <summary>
            Thrown when ActionMailer cannot locate any views for a given EmailResult
            </summary>
        </member>
        <member name="M:ActionMailerNext.NoViewsFoundException.#ctor(System.String)">
            <summary>
            Thrown when ActionMailer cannot locate any views for a given EmailResult
            </summary>
            <param name="message">The message to include in the exception.</param>
        </member>
        <member name="M:ActionMailerNext.NoViewsFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Thrown when ActionMailer cannot locate any views for a given EmailResult
            </summary>
            <param name="message">The message to include in the exception.</param>
            <param name="innerException">An inner exception which contributed to (or caused) this exception.</param>
        </member>
        <member name="T:ActionMailerNext.IMailSender">
            <summary>
            An object used to deliver mail.
            </summary>
        </member>
        <member name="M:ActionMailerNext.IMailSender.Send(System.Net.Mail.MailMessage)">
            <summary>
            Sends mail synchronously.
            </summary>
            <param name="mail">The mail message you wish to send.</param>
        </member>
        <member name="M:ActionMailerNext.IMailSender.SendAsync(System.Net.Mail.MailMessage,System.Action{System.Net.Mail.MailMessage})">
            <summary>
            Sends mail asynchronously.
            </summary>
            <param name="mail">The mail message you wish to send.</param>
            <param name="callback">The callback method that will be fired when sending is complete.</param>
        </member>
        <member name="T:ActionMailerNext.MailSendingContext">
            <summary>
            A special context object used by the OnMailSending() method
            to allow you to inspect the underlying MailMessage before it
            is sent, or prevent it from being sent altogether.
            </summary>
        </member>
        <member name="F:ActionMailerNext.MailSendingContext.Mail">
            <summary>
            The generated mail message that is being sent.
            </summary>
        </member>
        <member name="F:ActionMailerNext.MailSendingContext.Cancel">
            <summary>
            A special flag that you can toggle to prevent this mail
            from being sent.
            </summary>
        </member>
        <member name="M:ActionMailerNext.MailSendingContext.#ctor(System.Net.Mail.MailMessage)">
            <summary>
            Returns a populated context to be used for the OnMailSending()
            method in MailerBase.
            </summary>
            <param name="mail">The message you wish to wrap within this context.</param>
        </member>
        <member name="T:ActionMailerNext.MimeTypes">
            <summary>
            Just a handy class for finding mime types.
            </summary>
        </member>
        <member name="M:ActionMailerNext.MimeTypes.ResolveByExtension(System.String)">
            <summary>
            Resolves a mime type based on the given file extension.  The extension is case-insensitive.
            Shamelessly stolen from: http://stackoverflow.com/questions/1029740/get-a-mime-from-an-extention/3393525#3393525
            </summary>
            <param name="extension">The file extension to search for.</param>
            <returns>The proper mime type for the supplied extension.</returns>
        </member>
        <member name="T:ActionMailerNext.SmtpMailSender">
            <summary>
            Implements IMailSender by using System.Net.Mail.SmtpClient.
            </summary>
        </member>
        <member name="M:ActionMailerNext.SmtpMailSender.#ctor">
            <summary>
            Creates a new mail sender based on System.Net.Mail.SmtpClient
            </summary>
        </member>
        <member name="M:ActionMailerNext.SmtpMailSender.#ctor(System.Net.Mail.SmtpClient)">
            <summary>
            Creates a new mail sender based on System.Net.Mail.SmtpClient
            </summary>
            <param name="client">The underlying SmtpClient instance to use.</param>
        </member>
        <member name="M:ActionMailerNext.SmtpMailSender.Send(System.Net.Mail.MailMessage)">
            <summary>
            Sends mail synchronously.
            </summary>
            <param name="mail">The mail you wish to send.</param>
        </member>
        <member name="M:ActionMailerNext.SmtpMailSender.SendAsync(System.Net.Mail.MailMessage,System.Action{System.Net.Mail.MailMessage})">
            <summary>
            Sends mail asynchronously.
            </summary>
            <param name="mail">The mail you wish to send.</param>
            <param name="callback">The callback method to invoke when the send operation is complete.</param>
        </member>
        <member name="M:ActionMailerNext.SmtpMailSender.Dispose">
            <summary>
            Destroys the underlying SmtpClient.
            </summary>
        </member>
    </members>
</doc>
